version: "3.8"

services:
  elasticmq:
    container_name: elasticmq
    image: softwaremill/elasticmq:1.5.7
    ports:
      - "9324:9324"
      - "9325:9325"
    volumes:
      - ./elasticmq/custom.conf:/opt/elasticmq.conf:ro
    networks:
      - sample-network
  invoker-builder:
    container_name: invoker-builder
    image: golang:1.22
    volumes:
      - ./:/app
    entrypoint: [ "bash", "/app/scripts/build.sh" ]
    networks:
      - sample-network
  invoker01:
    container_name: invoker01
    image: amazonlinux:2023
    volumes:
      - ./:/app
      - ~/.aws:/root/.aws:ro
    entrypoint: [ "/app/cmd/lambda-invoker/main" ]
    networks:
      - sample-network
    depends_on: [
      invoker-builder
    ]

networks:
  sample-network:
    driver: bridge

#  localstack:
#    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
#    image: localstack/localstack:3.2.0
#    ports:
#      - "127.0.0.1:4566:4566" # LocalStack Gateway
#      - "127.0.0.1:4510-4559:4510-4559" # external services port range
#    environment:
#      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
#      - DEBUG=${DEBUG:-0}
#      - AWS_ACCESS_KEY_ID=test
#      - AWS_SECRET_ACCESS_KEY=test
#      - AWS_DEFAULT_REGION=ap-northeast-1
#      - LAMBDA_DISABLE_AWS_ENDPOINT_URL=1
#    volumes:
#      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
#      - "/var/run/docker.sock:/var/run/docker.sock"
#      - "./cmd:/localstack/data"
